# Generated from C:/Users/lucas/Documents/trabalho final compiladores\trabalhoFinal_lucas.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,43,290,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,1,0,1,0,1,1,1,1,1,1,1,1,1,
        1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,
        5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,
        9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,
        1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,
        1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,
        1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,
        1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,
        1,31,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,4,35,215,8,35,
        11,35,12,35,216,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,
        228,8,36,1,37,4,37,231,8,37,11,37,12,37,232,1,37,1,37,4,37,237,8,
        37,11,37,12,37,238,1,38,1,38,5,38,243,8,38,10,38,12,38,246,9,38,
        1,38,1,38,1,39,1,39,5,39,252,8,39,10,39,12,39,255,9,39,1,40,4,40,
        258,8,40,11,40,12,40,259,1,40,1,40,1,41,1,41,1,41,1,41,5,41,268,
        8,41,10,41,12,41,271,9,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,
        5,42,281,8,42,10,42,12,42,284,9,42,1,42,1,42,1,42,1,42,1,42,3,244,
        269,282,0,43,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
        45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
        67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,1,0,
        4,1,0,48,57,2,0,65,90,97,122,3,0,48,57,65,90,97,122,3,0,9,10,13,
        13,32,32,298,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
        1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
        1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
        1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
        1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
        1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,1,87,1,0,0,0,3,89,
        1,0,0,0,5,95,1,0,0,0,7,99,1,0,0,0,9,104,1,0,0,0,11,109,1,0,0,0,13,
        116,1,0,0,0,15,118,1,0,0,0,17,120,1,0,0,0,19,125,1,0,0,0,21,127,
        1,0,0,0,23,129,1,0,0,0,25,131,1,0,0,0,27,133,1,0,0,0,29,138,1,0,
        0,0,31,141,1,0,0,0,33,146,1,0,0,0,35,152,1,0,0,0,37,158,1,0,0,0,
        39,164,1,0,0,0,41,168,1,0,0,0,43,174,1,0,0,0,45,181,1,0,0,0,47,183,
        1,0,0,0,49,185,1,0,0,0,51,187,1,0,0,0,53,189,1,0,0,0,55,191,1,0,
        0,0,57,194,1,0,0,0,59,197,1,0,0,0,61,200,1,0,0,0,63,203,1,0,0,0,
        65,205,1,0,0,0,67,207,1,0,0,0,69,210,1,0,0,0,71,214,1,0,0,0,73,227,
        1,0,0,0,75,230,1,0,0,0,77,240,1,0,0,0,79,249,1,0,0,0,81,257,1,0,
        0,0,83,263,1,0,0,0,85,276,1,0,0,0,87,88,5,59,0,0,88,2,1,0,0,0,89,
        90,5,99,0,0,90,91,5,111,0,0,91,92,5,110,0,0,92,93,5,115,0,0,93,94,
        5,116,0,0,94,4,1,0,0,0,95,96,5,105,0,0,96,97,5,110,0,0,97,98,5,116,
        0,0,98,6,1,0,0,0,99,100,5,114,0,0,100,101,5,101,0,0,101,102,5,97,
        0,0,102,103,5,108,0,0,103,8,1,0,0,0,104,105,5,98,0,0,105,106,5,111,
        0,0,106,107,5,111,0,0,107,108,5,108,0,0,108,10,1,0,0,0,109,110,5,
        83,0,0,110,111,5,116,0,0,111,112,5,114,0,0,112,113,5,105,0,0,113,
        114,5,110,0,0,114,115,5,103,0,0,115,12,1,0,0,0,116,117,5,44,0,0,
        117,14,1,0,0,0,118,119,5,61,0,0,119,16,1,0,0,0,120,121,5,118,0,0,
        121,122,5,111,0,0,122,123,5,105,0,0,123,124,5,100,0,0,124,18,1,0,
        0,0,125,126,5,40,0,0,126,20,1,0,0,0,127,128,5,41,0,0,128,22,1,0,
        0,0,129,130,5,123,0,0,130,24,1,0,0,0,131,132,5,125,0,0,132,26,1,
        0,0,0,133,134,5,109,0,0,134,135,5,97,0,0,135,136,5,105,0,0,136,137,
        5,110,0,0,137,28,1,0,0,0,138,139,5,105,0,0,139,140,5,102,0,0,140,
        30,1,0,0,0,141,142,5,101,0,0,142,143,5,108,0,0,143,144,5,115,0,0,
        144,145,5,101,0,0,145,32,1,0,0,0,146,147,5,98,0,0,147,148,5,114,
        0,0,148,149,5,101,0,0,149,150,5,97,0,0,150,151,5,107,0,0,151,34,
        1,0,0,0,152,153,5,112,0,0,153,154,5,114,0,0,154,155,5,105,0,0,155,
        156,5,110,0,0,156,157,5,116,0,0,157,36,1,0,0,0,158,159,5,105,0,0,
        159,160,5,110,0,0,160,161,5,112,0,0,161,162,5,117,0,0,162,163,5,
        116,0,0,163,38,1,0,0,0,164,165,5,102,0,0,165,166,5,111,0,0,166,167,
        5,114,0,0,167,40,1,0,0,0,168,169,5,119,0,0,169,170,5,104,0,0,170,
        171,5,105,0,0,171,172,5,108,0,0,172,173,5,101,0,0,173,42,1,0,0,0,
        174,175,5,114,0,0,175,176,5,101,0,0,176,177,5,116,0,0,177,178,5,
        117,0,0,178,179,5,114,0,0,179,180,5,110,0,0,180,44,1,0,0,0,181,182,
        5,33,0,0,182,46,1,0,0,0,183,184,5,45,0,0,184,48,1,0,0,0,185,186,
        5,42,0,0,186,50,1,0,0,0,187,188,5,47,0,0,188,52,1,0,0,0,189,190,
        5,43,0,0,190,54,1,0,0,0,191,192,5,61,0,0,192,193,5,61,0,0,193,56,
        1,0,0,0,194,195,5,33,0,0,195,196,5,61,0,0,196,58,1,0,0,0,197,198,
        5,62,0,0,198,199,5,61,0,0,199,60,1,0,0,0,200,201,5,60,0,0,201,202,
        5,61,0,0,202,62,1,0,0,0,203,204,5,62,0,0,204,64,1,0,0,0,205,206,
        5,60,0,0,206,66,1,0,0,0,207,208,5,38,0,0,208,209,5,38,0,0,209,68,
        1,0,0,0,210,211,5,124,0,0,211,212,5,124,0,0,212,70,1,0,0,0,213,215,
        7,0,0,0,214,213,1,0,0,0,215,216,1,0,0,0,216,214,1,0,0,0,216,217,
        1,0,0,0,217,72,1,0,0,0,218,219,5,84,0,0,219,220,5,82,0,0,220,221,
        5,85,0,0,221,228,5,69,0,0,222,223,5,70,0,0,223,224,5,65,0,0,224,
        225,5,76,0,0,225,226,5,83,0,0,226,228,5,69,0,0,227,218,1,0,0,0,227,
        222,1,0,0,0,228,74,1,0,0,0,229,231,7,0,0,0,230,229,1,0,0,0,231,232,
        1,0,0,0,232,230,1,0,0,0,232,233,1,0,0,0,233,234,1,0,0,0,234,236,
        9,0,0,0,235,237,7,0,0,0,236,235,1,0,0,0,237,238,1,0,0,0,238,236,
        1,0,0,0,238,239,1,0,0,0,239,76,1,0,0,0,240,244,5,34,0,0,241,243,
        9,0,0,0,242,241,1,0,0,0,243,246,1,0,0,0,244,245,1,0,0,0,244,242,
        1,0,0,0,245,247,1,0,0,0,246,244,1,0,0,0,247,248,5,34,0,0,248,78,
        1,0,0,0,249,253,7,1,0,0,250,252,7,2,0,0,251,250,1,0,0,0,252,255,
        1,0,0,0,253,251,1,0,0,0,253,254,1,0,0,0,254,80,1,0,0,0,255,253,1,
        0,0,0,256,258,7,3,0,0,257,256,1,0,0,0,258,259,1,0,0,0,259,257,1,
        0,0,0,259,260,1,0,0,0,260,261,1,0,0,0,261,262,6,40,0,0,262,82,1,
        0,0,0,263,264,5,47,0,0,264,265,5,47,0,0,265,269,1,0,0,0,266,268,
        9,0,0,0,267,266,1,0,0,0,268,271,1,0,0,0,269,270,1,0,0,0,269,267,
        1,0,0,0,270,272,1,0,0,0,271,269,1,0,0,0,272,273,5,10,0,0,273,274,
        1,0,0,0,274,275,6,41,0,0,275,84,1,0,0,0,276,277,5,47,0,0,277,278,
        5,42,0,0,278,282,1,0,0,0,279,281,9,0,0,0,280,279,1,0,0,0,281,284,
        1,0,0,0,282,283,1,0,0,0,282,280,1,0,0,0,283,285,1,0,0,0,284,282,
        1,0,0,0,285,286,5,42,0,0,286,287,5,47,0,0,287,288,1,0,0,0,288,289,
        6,42,0,0,289,86,1,0,0,0,10,0,216,227,232,238,244,253,259,269,282,
        1,6,0,0
    ]

class trabalhoFinal_lucasLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    INT = 36
    BOOL = 37
    REAL = 38
    STRING = 39
    ID = 40
    WS = 41
    COMMENT1 = 42
    COMMENT2 = 43

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'const'", "'int'", "'real'", "'bool'", "'String'", "','", 
            "'='", "'void'", "'('", "')'", "'{'", "'}'", "'main'", "'if'", 
            "'else'", "'break'", "'print'", "'input'", "'for'", "'while'", 
            "'return'", "'!'", "'-'", "'*'", "'/'", "'+'", "'=='", "'!='", 
            "'>='", "'<='", "'>'", "'<'", "'&&'", "'||'" ]

    symbolicNames = [ "<INVALID>",
            "INT", "BOOL", "REAL", "STRING", "ID", "WS", "COMMENT1", "COMMENT2" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "INT", "BOOL", "REAL", "STRING", 
                  "ID", "WS", "COMMENT1", "COMMENT2" ]

    grammarFileName = "trabalhoFinal_lucas.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


